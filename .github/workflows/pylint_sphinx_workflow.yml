name: Custom Pylint and Sphinx Workflow

on: 
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  initDependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
        shell: bash

  FindChangedFiles:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Find Changed files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          URL: ${{github.event.pull_request._links.html.href }}
        run: |
          touch modFiles.txt
          cat <<EOF | grep ".py$" | tee modFiles.txt
          $(gh pr diff  "$URL" --name-only)
          EOF
          echo "filePath=modFiles.txt" >> $GITHUB_ENV
        shell: bash
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: changedFiles
          path: ${{ env.filePath }}
          retention-days: 1

  RunPylinter:
    runs-on: ubuntu-latest
    needs: [FindChangedFiles, initDependencies]
    steps:
      - uses: actions/checkout@v3
      - name: Install Pylint
        run: |
          pip install pylint
        shell: bash
      - name: Download changedFiles
        uses: actions/download-artifact@v3
        with:
          name: changedFiles
      - name: Run linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in $(cat modFiles.txt); 
          do 
          pylint $file --fail-under 7;
          done;
        shell: bash

  BuildDocs:
    runs-on: ubuntu-latest
    needs: initDependencies
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
 
      - name: Install Sphinx and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx-rtd-theme sphinx-autoapi
      
      - name: Build Sphinx documentation
        run: |
          make -C docs clean 
          make -C docs html

      - name: List generated files
        run: |
          ls -R docs/build

      - name: Push HTML files to docs repo
        env:
          GITHUB_TOKEN: ${{ secrets.DOCPUSHING }}  # Ensure this token has access to doc_test_2
        run: |
          git config --global user.email "aarav3@illinois.edu"
          git config --global user.name "AaravAgarwal"
          
          git clone https://x-access-token:${GITHUB_TOKEN}@github.com/AaravAgarwal/doc_test_2.git
          cp -R docs/build/html/* doc_test_2/docs_html/
          cd doc_test_2
          git add .
          git commit -m "Update Sphinx documentation HTML"
          git push origin main  
