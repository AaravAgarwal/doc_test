name: Custom Pylint and Sphinx Workflow
on: 
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  initDependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
        shell: bash

  FindChangedFiles:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Find Changed files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          URL: ${{github.event.pull_request._links.html.href }}
        run: |
          touch modFiles.txt
          cat <<EOF | grep ".py$" | tee modFiles.txt
          $(gh pr diff  "$URL" --name-only)
          EOF
          echo "filePath=modFiles.txt" >> $GITHUB_ENV
        shell: bash
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
             name: changedFiles
             path: ${{ env.filePath }}
             retention-days: 1

  RunPylinter:
    runs-on: ubuntu-latest
    needs: [FindChangedFiles, initDependencies]
    steps:
      - uses: actions/checkout@v3
      - name: Install Pylint
        run: |
          pip install pylint
        shell: bash
      - name: Download changedFiles
        uses: actions/download-artifact@v3
        with:
          name: changedFiles
      - name: Run linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in $(cat modFiles.txt); 
          do 
          pylint $file --fail-under 7;
          done;
        shell: bash

  BuildDocs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
 
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx-rtd-theme sphinx-autoapi
      
      - name: Build documentation
        run: |
          make -C docs clean 
          make -C docs html
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/build/html

  DeployPages:
    needs: BuildDocs
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
